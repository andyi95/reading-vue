name: Development version deploy

on:
  push:
    branches:
      - dev
    paths-ignore:
      - 'README.md'


env:
  DEPLOY_PATH: reader/

jobs:
  build_and_push_to_docker_hub:
    name: Build and push image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push frontend
        uses: docker/build-push-action@v4

        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: registry.launch.andyi95.com/text-tools/reading-frontend
          context: frontend
          file: frontend/stage.Dockerfile

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: registry.launch.andyi95.com/text-tools/reading-backend
          context: backend

  deploy:

    name: Deploy images on the destination server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy.tar"
          target: "./"

      - uses: actions/checkout@v2

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          IP_WHITELIST: ${{ secrets.IP_WHITELIST }}
          TRAEFIK_BASIC_AUTH: ${{ secrets.TRAEFIK_BASIC_AUTH }}
          TRAEFIK_API_HOST: ${{ secrets.TRAEFIK_API_HOST }}
          COMPOSE_FILE: 'docker-compose.yaml:docker-compose.stage.yaml'
          COMPOSE_PROJECT_NAME: 'reader'
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 300m
          script: |
            mkdir -p reader
            cd reader
            tar -xvf deploy.tar --strip-components=1 -C reader/
            cd reader/
            docker-compose pull frontend backend
            docker-compose up -d --force-recreate --remove-orphans
            echo "Done"
#            mv -r reader/build/* reader/
#            cd reader/
#            echo "Building stage"
#            echo " "=
#            bash -c '
#            set -a;
#            source .env.dist;
#            (printenv | grep -v "^_=" | sort)
#            ' > .env
#            echo "${{ secrets.ENV_FILE }}" >> .env
#            docker-compose up -d --force-recreate --remove-orphans
  send_message:
    name: send telegram message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Report on the last run of ${{ github.workflow }}.
            ${{ github.job }} in workflow ${{ github.action }} from repo ${{ github.repository }} has finished with status ${{ job.status }}.
